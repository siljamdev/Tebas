console.print "Debug dotnet project"

process.runOutput "dotnet" "build /nologo /clp:NoSummary" dot err

table.append dot err

string.set con.0 "0"
math.less con.1 con.0 dot.length
while con.1 {
	table.access i.0 dot con.0
	
	string.equal i.1 i.0 ""
	if i.1 {
		math.sumUp con.0 con.0
		math.less con.1 con.0 dot.length
		continue
	}
	
	string.contains i.1 i.0 "warning"
	string.contains i.2 i.0 "error"
	if i.2 {
		call orderError
	} elseif i.1 {
		call orderWarning
	} else {
		console.print i.0
	}
	
	math.sumUp con.0 con.0
	math.less con.1 con.0 dot.length
}

call showWarnings
call showErrors

project.read def.0 "timesCompiled"
math.sumUp def.0 def.0
project.write "timesCompiled" def.0

math.greater def.0 errors.length "0"
if def.0 {
	//console.pause "Console Paused"
	exit
} else {
	process.cmd "start \"\" \"cmd /c dotnet run & pause & exit\""
}

function orderWarning {
	scope temp
	
	string.split temp i.0  [":"]
	self.append temp.0 ":"
	self.append temp.0 temp.1
	table.delete temp.1
	
	string.split brack temp.0 ["("]
	table.insert temp.1 "("
	self.append temp.1 brack.-1
	table.delete brack.-1
	table.join temp.0 brack "("
	
	string.set control.0 "0"
	math.less control.1 control.0 warns.length
	while control.1 {
		table.access control.2 warns control.0
		string.split temporal control.2 ["#[3"]
		string.equal control.3 temp.0 temporal.0
		
		if control.3 {
			table.delete temp.0
			table.join control.4 temp ":"
			table.add temporal control.4
			table.join control.2 temporal "#[3"
			table.setAt warns control.0 control.2
			return
		}
		math.sumUp control.0 control.0
		math.less control.1 control.0 warns.length
	}
	
	table.add warns temp.0
	self.append warns.-1 "#[3"
	table.delete temp.0
	table.join control.4 temp ":"
	self.append warns.-1 control.4
}

function orderError {
	scope temp
	
	string.split temp i.0 [":"]
	self.append temp.0 ":"
	self.append temp.0 temp.1
	table.delete temp.1
	
	string.split brack temp.0 ["("]
	table.insert temp.1 "("
	self.append temp.1 brack.-1
	table.delete brack.-1
	table.join temp.0 brack "("
	
	string.set control.0 "0"
	math.less control.1 control.0 errors.length
	while control.1 {
		table.access control.2 errors control.0
		string.split temporal control.2 ["#[3"]
		string.equal control.3 temp.0 temporal.0
		
		if control.3 {
			table.delete temp.0
			table.join control.4 temp ":"
			table.add temporal control.4
			table.join control.2 temporal "#[3"
			table.setAt errors control.0 control.2
			return
		}
		math.sumUp control.0 control.0
		math.less control.1 control.0 errors.length
	}
	
	table.add errors temp.0
	self.append errors.-1 "#[3"
	table.delete temp.0
	table.join control.4 temp ":"
	self.append errors.-1 control.4
}

function showWarnings {	
	scope temp
	
	string.set control.0 "0"
	math.less control.1 control.0 warns.length
	
	if control.1 {
		console.print "\n####WARNINGS####"
	}
	
	while control.1 {
		table.access control.2 warns control.0
		string.split temp control.2 ["#[3"]
		
		console.print f"\nWarnings for file: {temp.0}"
		
		string.set control.5 "1"
		math.less control.6 control.5 temp.length
		while control.6 {
			table.access control.7 temp control.5
			console.print control.7
			
			math.sumUp control.5 control.5
			math.less control.6 control.5 temp.length
		}
		
		math.sumUp control.0 control.0
		math.less control.1 control.0 warns.length
	}
}

function showErrors {	
	scope temp
	
	string.set control.0 "0"
	math.less control.1 control.0 errors.length
	
	if control.1 {
		console.print "\n####ERRORS####"
	}
	
	while control.1 {
		table.access control.2 errors control.0
		string.split temp control.2 ["#[3"]
		
		console.print f"\nErrors for file: {temp.0}"
		
		string.set control.5 "1"
		math.less control.6 control.5 temp.length
		while control.6 {
			table.access control.7 temp control.5
			console.print control.7
			
			math.sumUp control.5 control.5
			math.less control.6 control.5 temp.length
		}
		
		math.sumUp control.0 control.0
		math.less control.1 control.0 errors.length
	}
}
