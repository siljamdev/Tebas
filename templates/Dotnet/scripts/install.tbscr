console.print "Installation of dotnet template"

math.greater def.1 args.length "2"
if def.1 {
	template.write "author" args.2
} else {
	console.ask def.0 "What is your author name?: "
	template.write "author" def.0
}

math.greater def.1 args.length "3"
if def.1 {
	template.write "company" args.3
} else {
	console.ask def.0 "What is your company name?: "
	template.write "company" def.0
}

call handleDotnet
call handle7zip

console.print "Installation finished!"

function handleDotnet {
	math.greater def.0 args.length "0"
	if def.0 {
		table.add stack args.0
		call tryPath
		table.pop def.1 stack
		if def.1 {
			console.print "Dotnet path gotten from CLI arguments"
			call successDotnet
			return
		}
		console.print "Invalid CLI path for dotnet"
	}
	
	shared.read sh.0 "dotnetPath"
	string.equal def.0 sh.0 ""
	if! def.0 {
		table.add stack sh.0
		call tryPath
		table.pop def.1 stack
		if def.1 {
			console.print "Dotnet path gotten from shared storage"
			call successDotnet
			return
		}
	}
	
	table.add stack "dotnet"
	call tryPathVar
	table.pop def.1 stack
	if def.1 {
		console.print "Dotnet path gotten from PATH variable"
		call successDotnet
		return
	}
	
	string.set con.0 "0"
	
	do! con.0 {
		console.ask def.2 "Enter the path to dotnet.exe: "
		table.add stack def.2
		call tryPath
		table.pop con.0 stack
	}
	
	call successDotnet
}

function successDotnet {
	scope cont
	table.pop cont.0 stack
	
	template.write "dotnetPath" cont.0
	shared.write "dotnetPath" cont.0
}

function handle7zip {
	math.greater def.0 args.length "1"
	if def.0 {
		table.add stack args.1
		call tryPath
		table.pop def.1 stack
		if def.1 {
			console.print "7zip path gotten from CLI arguments"
			call success7zip
			return
		}
		console.print "Invalid CLI path for 7zip"
	}
	
	shared.read sh.0 "7zipPath"
	string.equal def.0 sh.0 ""
	if! def.0 {
		table.add stack sh.0
		call tryPath
		table.pop def.1 stack
		if def.1 {
			console.print "7zip path gotten from shared storage"
			call success7zip
			return
		}
	}
	
	table.add stack "7z"
	call tryPathVar
	table.pop def.1 stack
	if def.1 {
		console.print "7zip path gotten from PATH variable"
		call success7zip
		return
	}
	
	string.set con.0 "0"
	
	do! con.0 {
		console.ask def.2 "Enter the path to 7z.exe: "
		table.add stack def.2
		call tryPath
		table.pop con.0 stack
	}
	
	call success7zip
}

function success7zip {
	scope cont
	table.pop cont.0 stack
	
	template.write "7zipPath" cont.0
	shared.write "7zipPath" cont.0
}

//Returns true/false and the path if true
function tryPath {
	scope cont
	table.pop cont.0 stack
	self.removeQuotes cont.0
	
	file.exists cont.1 cont.0
	path.extension cont.2 cont.0
	self.lower cont.2
	string.equal cont.3 cont.2 ".exe"
	bool.and cont.4 cont.1 cont.2
	if cont.4 {
		table.add stack cont.0
		table.add stack true.0
		return
	}
	
	process.isExecutableInPath cont.1 cont.0
	if cont.1 {
		table.add stack cont.0
		table.add stack true.0
		return
	}
	
	table.add stack false.0
}

//Returns true if its in the PATH variable
function tryPathVar {
	scope cont
	table.pop cont.0 stack
	self.removeQuotes cont.0
	
	process.isExecutableInPath cont.1 cont.0
	if cont.1 {
		table.add stack cont.0
		table.add stack true.0
		return
	}
	
	table.add stack false.0
}
