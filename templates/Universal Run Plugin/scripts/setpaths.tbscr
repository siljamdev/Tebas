call handleFragRoom
call handleBrowser
call handlePython

function handleFragRoom {
	template.read fg.0 "fgromPath"
	console.print f"The current Fragroom path is {fg.0}"
	
	math.greater def.0 args.length "0"
	if def.0 {
		table.add stack args.0
		call tryPath
		table.pop def.1 stack
		if def.1 {
			console.print "Fragroom path gotten from CLI arguments"
			call successFragRoom
			return
		}
		console.print "Invalid CLI path for Fragroom"
	}
	
	string.set con.0 "0"
	
	do! con.0 {
		console.ask def.2 "Enter the path to Fragroom.exe (leave empty for mantaning the path): "
		string.equal def.3 def.2 ""
		if def.3 {
			return
		}
		table.add stack def.2
		call tryPath
		table.pop con.0 stack
	}
	
	call successFragRoom
}

function handleBrowser {
	template.read fg.0 "browserPath"
	console.print f"The current browser path is {fg.0}"
	
	math.greater def.0 args.length "1"
	if def.0 {
		table.add stack args.1
		call tryPath
		table.pop def.1 stack
		if def.1 {
			console.print "Browser path gotten from CLI arguments"
			call successBrowser
			return
		}
		console.print "Invalid CLI path for browser"
	}
	
	string.set con.0 "0"
	
	do! con.0 {
		console.ask def.2 "Enter the path to a browser executable (leave empty for mantaning the path): "
		string.equal def.3 def.2 ""
		if def.3 {
			return
		}
		table.add stack def.2
		call tryPath
		table.pop con.0 stack
	}
	
	call successBrowser
}

function handlePython {
	template.read fg.0 "pythonPath"
	console.print f"The current python path is {fg.0}"
	
	math.greater def.0 args.length "2"
	if def.0 {
		table.add stack args.2
		call tryPath
		table.pop def.1 stack
		if def.1 {
			console.print "Python path gotten from CLI arguments"
			call successPython
			return
		}
		console.print "Invalid CLI path for python"
	}
	
	string.set con.0 "0"
	
	do! con.0 {
		console.ask def.2 "Enter the path to python.exe (leave empty for mantaning the path): "
		string.equal def.3 def.2 ""
		if def.3 {
			return
		}
		table.add stack def.2
		call tryPath
		table.pop con.0 stack
	}
	
	call successPython
}

function successFragRoom {
	scope cont
	table.pop cont.0 stack
	
	template.write "fgromPath" cont.0
	console.print f"The new Fragroom path is {cont.0}"
}

function successBrowser {
	scope cont
	table.pop cont.0 stack
	
	template.write "browserPath" cont.0
	console.print f"The new browser path is {cont.0}"
}

function successPython {
	scope cont
	table.pop cont.0 stack
	
	template.write "pythonPath" cont.0
	console.print f"The new python path is {cont.0}"
}

//Returns true/false and the path if true
function tryPath {
	scope cont
	table.pop cont.0 stack
	self.removeQuotes cont.0
	
	file.exists cont.1 cont.0
	path.extension cont.2 cont.0
	self.lower cont.2
	string.equal cont.3 cont.2 ".exe"
	bool.and cont.4 cont.1 cont.2
	if cont.4 {
		table.add stack cont.0
		table.add stack true.0
		return
	}
	
	process.isExecutableInPath cont.1 cont.0
	if cont.1 {
		table.add stack cont.0
		table.add stack true.0
		return
	}
	
	table.add stack false.0
}
