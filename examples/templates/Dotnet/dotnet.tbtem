namedotnetgit.defaultUsegit.gitignore$obj/
bin/
releases/
/nuget.config	addReadmecodeExtensions.cscodeFilesFolderBlacklistbin
obj
.gitscript.debug{console.print "Debug dotnet project"

process.runOutput "dotnet" "build /nologo /clp:NoSummary" dot err

table.append dot err

string.set con.0 "0"
math.less con.1 con.0 dot.length
while con.1 {
	table.access i.0 dot con.0
	
	string.equal i.1 i.0 ""
	if i.1 {
		math.sumUp con.0 con.0
		math.less con.1 con.0 dot.length
		continue
	}
	
	string.contains i.1 i.0 "warning"
	string.contains i.2 i.0 "error"
	if i.2 {
		call orderError
	} elseif i.1 {
		call orderWarning
	} else {
		console.printNoExpand i.0
	}
	
	math.sumUp con.0 con.0
	math.less con.1 con.0 dot.length
}

call showWarnings
call showErrors

project.read def.0 "timesCompiled"
math.sumUp def.0 def.0
project.write "timesCompiled" def.0

math.greater def.0 errors.length "0"
if def.0 {
	console.pause "Console Paused"
	exit
} else {
	process.cmd "start \"\" \"cmd /c dotnet run & pause & exit\""
}

function orderWarning {
	scope temp
	
	string.split temp i.0  [":"]
	self.append temp.0 ":"
	self.append temp.0 temp.1
	table.delete temp.1
	
	string.split brack temp.0 ["("]
	table.insert temp.1 "("
	self.append temp.1 brack.-1
	table.delete brack.-1
	table.join temp.0 brack "("
	
	string.set control.0 "0"
	math.less control.1 control.0 warns.length
	while control.1 {
		table.access control.2 warns control.0
		string.split temporal control.2 ["#[3"]
		string.equal control.3 temp.0 temporal.0
		
		if control.3 {
			table.delete temp.0
			table.join control.4 temp ":"
			table.add temporal control.4
			table.join control.2 temporal "#[3"
			table.setAt warns control.0 control.2
			return
		}
		math.sumUp control.0 control.0
		math.less control.1 control.0 warns.length
	}
	
	table.add warns temp.0
	self.append warns.-1 "#[3"
	table.delete temp.0
	table.join control.4 temp ":"
	self.append warns.-1 control.4
}

function orderError {
	scope temp
	
	string.split temp i.0 [":"]
	self.append temp.0 ":"
	self.append temp.0 temp.1
	table.delete temp.1
	
	string.split brack temp.0 ["("]
	table.insert temp.1 "("
	self.append temp.1 brack.-1
	table.delete brack.-1
	table.join temp.0 brack "("
	
	string.set control.0 "0"
	math.less control.1 control.0 errors.length
	while control.1 {
		table.access control.2 errors control.0
		string.split temporal control.2 ["#[3"]
		string.equal control.3 temp.0 temporal.0
		
		if control.3 {
			table.delete temp.0
			table.join control.4 temp ":"
			table.add temporal control.4
			table.join control.2 temporal "#[3"
			table.setAt errors control.0 control.2
			return
		}
		math.sumUp control.0 control.0
		math.less control.1 control.0 errors.length
	}
	
	table.add errors temp.0
	self.append errors.-1 "#[3"
	table.delete temp.0
	table.join control.4 temp ":"
	self.append errors.-1 control.4
}

function showWarnings {	
	scope temp
	
	string.set control.0 "0"
	math.less control.1 control.0 warns.length
	
	if control.1 {
		console.print "\n####WARNINGS####"
	}
	
	while control.1 {
		table.access control.2 warns control.0
		string.split temp control.2 ["#[3"]
		
		console.print "\nWarnings for file: {temp.0}"
		
		string.set control.5 "1"
		math.less control.6 control.5 temp.length
		while control.6 {
			table.access control.7 temp control.5
			console.printNoExpand control.7
			
			math.sumUp control.5 control.5
			math.less control.6 control.5 temp.length
		}
		
		math.sumUp control.0 control.0
		math.less control.1 control.0 warns.length
	}
}

function showErrors {	
	scope temp
	
	string.set control.0 "0"
	math.less control.1 control.0 errors.length
	
	if control.1 {
		console.print "\n####ERRORS####"
	}
	
	while control.1 {
		table.access control.2 errors control.0
		string.split temp control.2 ["#[3"]
		
		console.print "\nErrors for file: {temp.0}"
		
		string.set control.5 "1"
		math.less control.6 control.5 temp.length
		while control.6 {
			table.access control.7 temp control.5
			console.printNoExpand control.7
			
			math.sumUp control.5 control.5
			math.less control.6 control.5 temp.length
		}
		
		math.sumUp control.0 control.0
		math.less control.1 control.0 errors.length
	}
}
script.info†console.print "Info dotnet project"
project.read def.0 "dateCreated"
console.print "This is a dotnet project created on the {def.0}"script.install›console.print "Installation of dotnet template"

console.ask def.0 "What is your author name?: "
template.write "author" def.0

console.ask def.0 "What is your company name?: "
template.write "company" def.0

do! con.0 {
	console.ask def.2 "Enter the path to 7z.exe: "
	self.removeQuotes def.2
	file.exists con.0 def.2
}

template.write "7zipPath" def.2

console.print "Installation finished!"

script.newàconsole.print "New dotnet project"

//Csproj
file.exists cp.0 "W/*.csproj"
if! cp.0 {
	template.read cp.1 "csproj"
	
	template.read cp.2 "author"
	self.replace cp.1 "@author" cp.2
	
	template.read cp.2 "company"
	self.replace cp.1 "@company" cp.2
	
	console.ask cp.2 "What is the description of the project?: "
	self.replace cp.1 "@desc" cp.2
	
	string.set cp.3 "W/{%pn}.csproj"
	self.expand cp.3
	
	file.create cp.3
	file.write cp.3 cp.1
}

//program
file.exists pr.0 "W/*.cs"
if! pr.0 {
	template.read pr.1 "program"
	
	self.replace pr.1 "@name" %pn
	
	string.set pr.3 "W/{%pn}.cs"
	self.expand pr.3
	
	file.create pr.3
	file.write pr.3 pr.1
}

folder.create "W/releases"

project.write "timesCompiled" "0"

project.write "dateCreated" %d

console.ask def.0 "Do you want to use 7zip on publish? (Y/N): "
self.upper def.0

string.equal def.1 def.0 "Y"
if def.1 {
	project.write "use7zip" true.0
} else {
	project.write "use7zip" false.0
}
script.packageƒconsole.print "Package dotnet project"

string.set def.1 "add package "
self.append def.1 args.0

process.run "dotnet" def.1
script.publishXconsole.print "Publish dotnet project"

string.set def.0 args.0
console.print "The version is {def.0}"

//console.ask def.0 "What is the version(Ex: v1.0.0_winx64)?: "

string.set def.1 "W/releases/"
self.append def.1 def.0

folder.create def.1

do! con.0 {
	console.print "Possible OS:"
	console.print "    win-x64, win-x86"
	console.print "    win-arm, win-arm64"
	console.print "    linux-x64, linux-arm, linux-arm64"
	console.print "    osx-x64, osx-arm64"
	console.print "    freebsd-x64, freebsd-arm, freebsd-arm64"
	console.print "    ios-arm64"
	console.print "    android-arm, android-arm64"
	console.print "    tizen-x64"
	console.print "    tvos-arm64"
	console.print "    watchos-arm64"
	
	console.ask con.1 "Which one to use? "
	
	table.contains con.0 ["win-x64","win-x86","win-arm","win-arm64","linux-x64","linux-arm","linux-arm64","osx-x64","osx-arm64","freebsd-x64","freebsd-arm","freebsd-arm64","ios-arm64","android-arm","android-arm64","tizen-x64","tvos-arm64","watchos-arm64"] con.1
}

string.set dotnet.0 "publish -p:PublishSingleFile=true -r {con.1} -c Release --self-contained true --output releases/{def.0}"
self.expand dotnet.0

process.run "dotnet" dotnet.0

string.set pdb.0 "W/releases/{def.0}"
self.expand pdb.0

folder.list files pdb.0 "*.pdb"

string.set pdb.1 "0"
math.less pdb.2 pdb.1 files.length
while pdb.2 {
	table.access pdb.3 files pdb.1
	file.delete pdb.3
	
	math.sumUp pdb.1 pdb.1
	
	math.less pdb.2 pdb.1 files.length
}

project.read zip.0 "use7zip"

if zip.0 {
	template.read zip.1 "7zipPath"
	
	string.set zip.2 "releases/{%pn}_{def.0}_{con.1}.zip"
	self.expand zip.2
	
	string.set zip.3 "./releases/{def.0}/*"
	self.expand zip.3
	
	string.set zip.4 "a -tzip \"{zip.2}\" \"{zip.3}\""
	self.expand zip.4
	
	process.run zip.1 zip.4
}

console.print "Publishing finished!"
script.runqconsole.print "Run dotnet project"

process.runOutput "dotnet" "build /nologo /clp:NoSummary" dot err

table.append dot err

string.set con.0 "0"
math.less con.1 con.0 dot.length
while con.1 {
	table.access i.0 dot con.0
	
	string.equal i.1 i.0 ""
	if i.1 {
		math.sumUp con.0 con.0
		math.less con.1 con.0 dot.length
		continue
	}
	
	string.contains i.1 i.0 "warning"
	string.contains i.2 i.0 "error"
	if i.2 {
		call orderError
	} elseif i.1 {
		call orderWarning
	} else {
		console.printNoExpand i.0
	}
	
	math.sumUp con.0 con.0
	math.less con.1 con.0 dot.length
}

call showWarnings
call showErrors

project.read def.0 "timesCompiled"
math.sumUp def.0 def.0
project.write "timesCompiled" def.0

math.greater def.0 errors.length "0"
if def.0 {
	console.pause "Console Paused"
	exit
} else {
	process.cmd "start \"\" \"cmd /c dotnet run & exit\""
}

function orderWarning {
	scope temp
	
	string.split temp i.0  [":"]
	self.append temp.0 ":"
	self.append temp.0 temp.1
	table.delete temp.1
	
	string.split brack temp.0 ["("]
	table.insert temp.1 "("
	self.append temp.1 brack.-1
	table.delete brack.-1
	table.join temp.0 brack "("
	
	string.set control.0 "0"
	math.less control.1 control.0 warns.length
	while control.1 {
		table.access control.2 warns control.0
		string.split temporal control.2 ["#[3"]
		string.equal control.3 temp.0 temporal.0
		
		if control.3 {
			table.delete temp.0
			table.join control.4 temp ":"
			table.add temporal control.4
			table.join control.2 temporal "#[3"
			table.setAt warns control.0 control.2
			return
		}
		math.sumUp control.0 control.0
		math.less control.1 control.0 warns.length
	}
	
	table.add warns temp.0
	self.append warns.-1 "#[3"
	table.delete temp.0
	table.join control.4 temp ":"
	self.append warns.-1 control.4
}

function orderError {
	scope temp
	
	string.split temp i.0 [":"]
	self.append temp.0 ":"
	self.append temp.0 temp.1
	table.delete temp.1
	
	string.split brack temp.0 ["("]
	table.insert temp.1 "("
	self.append temp.1 brack.-1
	table.delete brack.-1
	table.join temp.0 brack "("
	
	string.set control.0 "0"
	math.less control.1 control.0 errors.length
	while control.1 {
		table.access control.2 errors control.0
		string.split temporal control.2 ["#[3"]
		string.equal control.3 temp.0 temporal.0
		
		if control.3 {
			table.delete temp.0
			table.join control.4 temp ":"
			table.add temporal control.4
			table.join control.2 temporal "#[3"
			table.setAt errors control.0 control.2
			return
		}
		math.sumUp control.0 control.0
		math.less control.1 control.0 errors.length
	}
	
	table.add errors temp.0
	self.append errors.-1 "#[3"
	table.delete temp.0
	table.join control.4 temp ":"
	self.append errors.-1 control.4
}

function showWarnings {	
	scope temp
	
	string.set control.0 "0"
	math.less control.1 control.0 warns.length
	
	if control.1 {
		console.print "\n####WARNINGS####"
	}
	
	while control.1 {
		table.access control.2 warns control.0
		string.split temp control.2 ["#[3"]
		
		console.print "\nWarnings for file: {temp.0}"
		
		string.set control.5 "1"
		math.less control.6 control.5 temp.length
		while control.6 {
			table.access control.7 temp control.5
			console.printNoExpand control.7
			
			math.sumUp control.5 control.5
			math.less control.6 control.5 temp.length
		}
		
		math.sumUp control.0 control.0
		math.less control.1 control.0 warns.length
	}
}

function showErrors {	
	scope temp
	
	string.set control.0 "0"
	math.less control.1 control.0 errors.length
	
	if control.1 {
		console.print "\n####ERRORS####"
	}
	
	while control.1 {
		table.access control.2 errors control.0
		string.split temp control.2 ["#[3"]
		
		console.print "\nErrors for file: {temp.0}"
		
		string.set control.5 "1"
		math.less control.6 control.5 temp.length
		while control.6 {
			table.access control.7 temp control.5
			console.printNoExpand control.7
			
			math.sumUp control.5 control.5
			math.less control.6 control.5 temp.length
		}
		
		math.sumUp control.0 control.0
		math.less control.1 control.0 errors.length
	}
}
script.stats†console.print "Stats dotnet project"
project.read def.0 "timesCompiled"
console.print "This project has been compiled {def.0} times"resources.csprojÃ<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net8.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    
    <Version>1.0.0</Version>
    <Authors>@author</Authors>
    <Company>@company</Company>
    <PackageDescription>@desc</PackageDescription>
	
	<PublishSingleFile>true</PublishSingleFile>
  </PropertyGroup>
  
</Project>resources.programŸusing System;

//Auto generated by Tebas project manager
class @name{
	public static void Main(string[] args){
		Console.WriteLine("Hello World!");
	}
}